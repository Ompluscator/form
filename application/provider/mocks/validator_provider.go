// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import domain "flamingo.me/flamingo/core/form2/domain"
import mock "github.com/stretchr/testify/mock"

import validator "gopkg.in/go-playground/validator.v9"

// ValidatorProvider is an autogenerated mock type for the ValidatorProvider type
type ValidatorProvider struct {
	mock.Mock
}

// ErrorsToValidationInfo provides a mock function with given fields: err
func (_m *ValidatorProvider) ErrorsToValidationInfo(err error) domain.ValidationInfo {
	ret := _m.Called(err)

	var r0 domain.ValidationInfo
	if rf, ok := ret.Get(0).(func(error) domain.ValidationInfo); ok {
		r0 = rf(err)
	} else {
		r0 = ret.Get(0).(domain.ValidationInfo)
	}

	return r0
}

// GetValidator provides a mock function with given fields:
func (_m *ValidatorProvider) GetValidator() *validator.Validate {
	ret := _m.Called()

	var r0 *validator.Validate
	if rf, ok := ret.Get(0).(func() *validator.Validate); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*validator.Validate)
		}
	}

	return r0
}

// Validate provides a mock function with given fields: value
func (_m *ValidatorProvider) Validate(value interface{}) domain.ValidationInfo {
	ret := _m.Called(value)

	var r0 domain.ValidationInfo
	if rf, ok := ret.Get(0).(func(interface{}) domain.ValidationInfo); ok {
		r0 = rf(value)
	} else {
		r0 = ret.Get(0).(domain.ValidationInfo)
	}

	return r0
}
